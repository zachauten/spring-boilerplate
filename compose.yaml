services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: boilerplate
      POSTGRES_USER: boilerplate_user
      POSTGRES_PASSWORD: boilerplate_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U boilerplate_user -d boilerplate"]
      interval: 10s
      timeout: 5s
      retries: 5

  foo:
    build:
      context: "./"
    ports:
      - "8080:8080"
    environment:
      OTEL_SERVICE_NAME: "foo"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4318/"
      OTEL_RESOURCE_ATTRIBUTES: "service.version=alpha,deployment.environment=${USER}-local,host.name=${HOSTNAME},service.namespace=test,service.instance.id=B9B7E669-48A6-47C1-BCE4-F3B7AEF82754"
    depends_on:
      postgres:
        condition: service_healthy
      collector:
        condition: service_healthy
  flagd:
    image: ghcr.io/open-feature/flagd:latest
    ports:
      - "8013:8013"
    volumes:
      - type: bind
        source: ./
        target: /etc/flagd/
    command: ["start", "--uri", "file:/etc/flagd/flags.flagd.json"]
  bar:
    build:
      context: "./"
    environment:
      OTEL_SERVICE_NAME: "bar"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4318/"
      OTEL_RESOURCE_ATTRIBUTES: "service.version=alpha,deployment.environment=${USER}-local,host.name=${HOSTNAME},service.namespace=test,service.instance.id=1fd2b940-bc77-4415-812c-da32c28394d2"
    depends_on:
      postgres:
        condition: service_healthy
      collector:
        condition: service_healthy

  collector:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib
    build:
      context: .
      dockerfile: ./Dockerfile.collector
    hostname: collector
    environment:
      DD_API_KEY: ${DD_API_KEY}
    ports:
      # http
      - "4318:4318"
      # grpc
      - "4317:4317"
      # internal metrics: https://opentelemetry.io/docs/collector/internal-telemetry/#configure-internal-metrics
      - "8888:8888"
      # health check: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/healthcheckextension/README.md
      - "13133:13133"
      - "55680:55680"
      - "55679:55679"

    volumes:
      - type: bind
        source: ./config.yaml
        target: /etc/otelcol-contrib/config.yaml
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    healthcheck:
      test: ["CMD", "/healthcheck"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 0s

volumes:
  postgres_data:
